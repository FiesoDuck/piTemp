<!DOCTYPE html>
<html>
<head>
<link rel="stylesheet" type="text/css" href="style.css">
<title>piTemp</title>
<script src="../libraries/jquery-1.8.3.min.js" type="text/javascript"></script>
<script src="../libraries/RGraph.common.core.js" ></script>
<script src="../libraries/RGraph.common.effects.js" ></script>
<script src="../libraries/RGraph.thermometer.js" ></script>
<script type="text/javascript">
var schalter = "off";													// Schalter initiieren 
var moehre = 0;															// Schleifenzähler nicht i!!! wird in graph-script verwendet 										
var deviceid;

// Daten aus json lesen, abhängig von User Eingabe
function getData(deviceurl){	
	var data;
	var jsonurl = './tnow_' + deviceurl + '.json';
	console.log('Url    | %o', jsonurl);
	
	console.log('getData  | %o | Aufruf', schalter);
	if (schalter == 'update' || schalter == 'on') {							// nur Daten laden wenn "update" oder "on" vorliegt um Traffic zu vermeiden
		$.ajax({
			type: "GET",
			url: jsonurl,													// Daten-Stream url
			data: data,														// Variable für json Container
			async: true,										
			dataType: "json",
			success: function(data){										// nur ausführen wenn getJson (hier ajax) erfolgreich war
				moehre++;
				var celsius = data.temperature_record[0].celsius;
				var unix_time = data.temperature_record[0].unix_time;
				
				console.log('getData  | %o | Angekommen | %o', schalter, moehre);
				ausgeben(celsius, unix_time);
				graph(schalter, celsius);
				if (schalter == 'update') {schalter = "nan";}				// damit keine schleife entsteht
			},
			error: function(){alert('Der Server antwortet nicht!');}
			});
		}
			
	else if (schalter == "clear") {											// Daten löschen
		$('#temp').text("keine Daten");
		console.log("getData  | %o", schalter);
		graph(schalter, "0.0");
		divvv.style.backgroundColor = 'white';
	}
			
	else {console.log('getData  | %o | Abbruch', schalter);}		
}	
	
// Anzeigen von Daten aufgrund von User Eingabe, Aufruf durch getData()
function ausgeben(celsius, time) {	
	if (schalter == "on") {
		getData(deviceid);														// hier startet loop
		$('#temp').text(celsius);
		console.log("Ausgeben | %o", schalter);
		divvv.style.backgroundColor = '#99FF33';
	}
	else if (schalter == "off") {												// loop stoppen
		console.log("Ausgeben | %o", schalter);	
		divvv.style.backgroundColor = '#FF4D4D';
	}
	else if (schalter == "update") {											// einmaliges updaten der Daten
		console.log("Ausgeben | %o", schalter);									// da schaler=="update" in getData()
		$('#temp').text(celsius);												// auf schalter=="nan" gesetzt wird
		divvv.style.backgroundColor = 'white';
	}			
}

// Auswahl Benutzereingabe
function choose(choice){
		if (! deviceid ) {
			alert("Bitte Device auswaehlen!");
			console.log("LEEEEER!");
		}
		else {
			schalter = choice;
			console.log("Choose   | %o | %o",  schalter, deviceid);
			getData(deviceid);													// Daten Abfrage starten (abhängig von Eingabe (schalter variable)
		}
}

function graph (schalter, celsius) {	
	if (schalter == "on" || schalter == "update") {
		var value = celsius;
			if (typeof thermometer == 'undefined') {
				thermometer = new RGraph.Thermometer({id: 'cvs', min: 0, max: 50, value: value});
			} 
			else {
				thermometer.value = value;
			}
			thermometer.grow()
			//RGraph.clear(thermometer.canvas);
			//getData();				
			}
		else if (schalter == "off")
		{
		}
		else if (schalter == "clear")
		{
		graph("on", 0.0);
		console.log("Graph    | %o", schalter);
		}
}
</script>
</head>
<body>
<div id="container">
<img src="img/logo_gwk.png"/></a>
	<nav>
		<ul>
			<li><a href="simplebar.htm">read temperature</a></li>
			<li><a href="check.htm">config</a></li>
		</ul>
	</nav>
  <aside>
	<div id="buttons">
		<b>choose device:</b>
		<p>
		<input type="radio" name="device"autocomplete="off" onclick="deviceid=1")/>Temp 1</input>
		<input type="radio" name="device"autocomplete="off" onclick="deviceid=2")/>Temp 2</input>
		<br>
		<input type="radio" name="device"autocomplete="off" onclick="deviceid=9")/>Grundfos </input>
		<p>
		<b>control device:</b>
		<br>
		<button onClick="choose('on')">On</button>
		<button onClick="choose('off')">Off</button>
		<br>
		<button onClick="choose('update')">update</button>
		<button onClick="choose('clear')">clear</button>
	</div>	
</aside>
<section id="content">
	<article>	
		<div id="log">	
		<h1><span id="logback">Temperatur</span></h></div>
		<div id="temp">keine Daten</div>
		<canvas id="cvs" width="80" height="300">[No canvas support]</canvas> 
	</article>
</section>
<footer>		
</footer>
</div>
	<script>graph("on", 0.0); var divvv = document.getElementById('logback');</script>
	</body>
</html>
